#include <MKE16Z4.h>

#define DELAY_CNT               (2400000)
#define GREEN_LED_PIN           (1 << 4)
#define PWM_PERIOD              (24000)

void delay(uint32_t count)
{
    uint32_t index = 0;
    while (index < count)
    {
        index++;
    }
}

void delay500ms()
{
    uint32_t index = 0;
    while (index < DELAY_CNT)
    {
        index++;
    }
}

void initLed()
{
    PCC->CLKCFG[PCC_PORTB_INDEX] |= PCC_CLKCFG_CGC(1);
    PORTB->PCR[4] |= PORT_PCR_MUX(1);
    FGPIOB->PDDR |= GREEN_LED_PIN;
    FGPIOB->PDOR |= GREEN_LED_PIN;
}

void PWM(uint8_t dutyCycle)
{
    uint32_t onTime = (PWM_PERIOD * dutyCycle) / 100;
    uint32_t offTime = PWM_PERIOD - onTime;

    FGPIOB->PTOR |= GREEN_LED_PIN;
    delay(onTime);
    FGPIOB->PTOR |= GREEN_LED_PIN;
    delay(offTime);
}

void init_led(){
	PCC->CLKCFG(PCC_PORTB_INDEX) |= PCC_CLKCFG_GCC(1);

	PORTB->PCR[4] |= PORT_PCR_MUX(1);
	PORTB->PCR[5] |= PORT_PCR_MUX(1);

	FGPIOB->PDDR |= GREEN_LED_PIN | RED_LED_PIN;

	FGPIOB->PDOR &= ~RED_LED_PIN;
	FGPIOB->PDDR |= GREEN_LED_PIN;

}

int main (void){

	init_led();

	while(1){

	}

	return 0;
}
